{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","id","completed","title","cn","TodoList","posts","todos","map","post","username","getUserById","userId","usersFromServer","find","initialPost","App","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setUserIdError","setPosts","action","method","onSubmit","event","preventDefault","trim","newPost","Math","max","currentPosts","addPost","htmlFor","type","placeholder","value","onChange","cleanedValue","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a893713.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({\n  user: {\n    email,\n    name,\n  },\n}) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\nimport { Post } from '../../types/Post';\n\ntype Props = {\n  todo: Post\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id,\n    completed,\n    title,\n    user,\n  },\n}) => {\n  if (!user) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Post } from '../../types/Post';\n\ntype Props = {\n  todos: Post[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos: posts }) => {\n  return (\n    <section className=\"TodoList\">\n      {posts.map(post => (\n        <TodoInfo todo={post} key={post.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Post } from './types/Post';\n\nconst getUserById = (userId: number) => (\n  usersFromServer.find(user => user.id === userId)\n);\n\nconst initialPost: Post[] = todosFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setUserIdError] = useState(false);\n\n  const [todos, setPosts] = useState(initialPost);\n\n  function handleTitleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const cleanedValue = event.target.value\n      .replace(/[^a-zA-Zа-яА-Я0-9\\s]/g, '');\n\n    setTitle(cleanedValue);\n    setHasTitleError(false);\n  }\n\n  function handleUserChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    setUserId(+event.target.value);\n    setUserIdError(false);\n  }\n\n  function getNewPostId(posts: Post[]) {\n    const maxId = Math.max(...posts.map(post => post.id));\n\n    return maxId + 1;\n  }\n\n  const addPost = (post: Post) => {\n    const newPost = {\n      ...post,\n      id: getNewPostId(todos),\n    };\n\n    setPosts(currentPosts => [...currentPosts, newPost]);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    setUserIdError(!userId);\n    setHasTitleError(!title.trim());\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    addPost({\n      user: getUserById(userId),\n      id: 0,\n      title,\n      userId,\n      completed: false,\n    });\n    reset();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title:&nbsp;</label>\n\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userId\">User:&nbsp;</label>\n\n          <select\n            id=\"userId\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}