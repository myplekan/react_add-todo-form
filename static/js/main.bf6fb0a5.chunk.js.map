{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","cn","completed","title","TodoList","posts","todos","map","post","username","getUserById","userId","usersFromServer","find","initialPost","App","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setUserIdError","setPosts","action","method","onSubmit","event","preventDefault","newPost","Math","max","currentPosts","addPost","htmlFor","type","placeholder","value","onChange","cleanedValue","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf6fb0a5.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user?.email}`}\n    >\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\nimport { Post } from '../../types/Post';\n\ntype Props = {\n  todo: Post\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Post } from '../../types/Post';\n\ntype Props = {\n  todos: Post[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos: posts }) => {\n  return (\n    <section className=\"TodoList\">\n      {posts.map(post => {\n        return <TodoInfo todo={post} key={post.id} />;\n      })}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Post } from './types/Post';\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst initialPost = todosFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setUserIdError] = useState(false);\n\n  function handleTitleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const cleanedValue = event.target.value\n      .replace(/[^a-zA-Zа-яА-Я0-9\\s]/g, '');\n\n    setTitle(cleanedValue);\n    setHasTitleError(false);\n  }\n\n  function handleUserChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    setUserId(+event.target.value);\n    setUserIdError(false);\n  }\n\n  function getNewPostId(posts: Post[]) {\n    const maxId = Math.max(...posts.map(post => post.id));\n\n    return maxId + 1;\n  }\n\n  const [todos, setPosts] = useState<Post[]>(initialPost);\n\n  const addPost = (post: Post) => {\n    const newPost = {\n      ...post,\n      id: getNewPostId(todos),\n    };\n\n    setPosts(currentPosts => [...currentPosts, newPost]);\n  };\n\n  function reset() {\n    setTitle('');\n    setUserId(0);\n  }\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    setUserIdError(!userId);\n    setHasTitleError(!title);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    addPost({\n      user: getUserById(userId),\n      id: 0,\n      title,\n      userId,\n      completed: false,\n    });\n    reset();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title:&nbsp;</label>\n\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userId\">User:&nbsp;</label>\n\n          <select\n            id=\"userId\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}